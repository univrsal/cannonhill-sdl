name: Push to master
run-name: ${{ github.ref_name }} push run ðŸš€
on:
  push:
    branches:
      - 'sdl2-port'
      - 'master'
      - 'release/**'
    tags:
      - '*'
permissions:
  contents: write
env:
  project: 'cannonhill'
jobs:
  linux:
    name: Build Linux
    runs-on: ubuntu-latest
    outputs:
      commitHash: ${{ steps.setup.outputs.commitHash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{ github.workspace }}
          ref: ${{ github.ref }}
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsdl2-dev
          sudo apt-get install -y cmake
      - name: Setup Environment
        working-directory: ${{ github.workspace }}
        id: setup
        run: |
          echo "commitHash=$(git rev-parse HEAD | cut -c1-9)" >> $GITHUB_OUTPUT
          echo "gitTag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
      - name: Configure CMake
        run: |
            cmake -S ${{github.workspace}} -B ${{github.workspace}}/build \
              -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/dist
            cmake --build ${{github.workspace}}/build --parallel 4 --target install
      - name: Upload binary zip
        uses: actions/upload-artifact@v4
        with:
          name: '${{ env.project }}.${{ steps.setup.outputs.gitTag }}-${{ steps.setup.outputs.commitHash }}.linux'
          path: ${{github.workspace}}/dist/**/*
  windows:
    name: Build Windows
    runs-on: windows-latest
    outputs:
      commitHash: ${{ steps.setup.outputs.commitHash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{ github.workspace }}
          ref: ${{ github.ref }}
      - name: Setup Environment
        working-directory: ${{ github.workspace }}
        id: setup
        run: |
          $CommitHash = (git rev-parse HEAD)[0..8] -join ''
          $GitTag = git describe --tags --abbrev=0 || echo "0.0.1"
          "commitHash=${CommitHash}" >> $env:GITHUB_OUTPUT
          "gitTag=${GitTag}" >> $env:GITHUB_OUTPUT
      - name: Configure CMake
        run: |
          cmake -S ${{github.workspace}} -B ${{github.workspace}}/build \
            -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/dist
          cmake --build ${{github.workspace}}/build --parallel 4 --target install
      - name: Upload binary zip
        uses: actions/upload-artifact@v4
        with:
          name: '${{ env.project }}.${{ steps.setup.outputs.gitTag }}-${{ steps.setup.outputs.commitHash }}.linux'
          path: ${{github.workspace}}/dist/**/*
